{
  "timestamp": "2025-06-15T23:36:05.881Z",
  "summary": {
    "totalFiles": 191,
    "totalHandlers": 1221,
    "buttonHandlers": 768,
    "onSubmitHandlers": 90,
    "onClickHandlers": 0,
    "potentialIssues": 84
  },
  "files": [
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/admin/services/field-definition-form.tsx",
      "fileName": "field-definition-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onClose",
          "line": 186,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => removeSelectOption(index)",
          "line": 292,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 391,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 394,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => removeSelectOption(index)",
          "line": 291,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 186,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 391,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 394,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({ ...prev, name: e.target.value",
          "line": 203,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({ ...prev, label: e.target.value",
          "line": 220,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectOptionsChange(e.target.value)",
          "line": 272,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setValidationMin(e.target.value)",
          "line": 317,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setValidationMax(e.target.value)",
          "line": 327,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({ ...prev, displayOrder: parseInt(e.target.value) || 0",
          "line": 352,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({ ...prev, defaultValue: e.target.value",
          "line": 361,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({ ...prev, placeholderText: e.target.value",
          "line": 372,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({ ...prev, helpText: e.target.value",
          "line": 382,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (field) {\n      setFormData({\n        ...field,\n        selectOptions: field.selectOptions || []",
          "line": 52,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/admin/services/service-edit-page.tsx",
      "fileName": "service-edit-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setLocation('/services')",
          "line": 185,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/services')",
          "line": 218,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/services')",
          "line": 235,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/services')",
          "line": 395,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveBasicInfo",
          "line": 400,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/services')",
          "line": 185,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/services')",
          "line": 218,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/services')",
          "line": 233,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/services')",
          "line": 393,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveBasicInfo",
          "line": 399,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => handleInputChange('name', e.target.value)",
          "line": 294,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleInputChange('basePrice', e.target.value)",
          "line": 362,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleInputChange('description', e.target.value)",
          "line": 384,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "const loadService = async () => {\n      if (!serviceId) return;\n\n      try {\n        setLoading(true);\n        const response = await apiRequest('GET', `/api/services/${serviceId",
          "line": 69,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (!authLoading && !isAdmin) {\n      toast({\n        title: 'Access Denied',\n        description: 'Admin access required to configure services and scope templates.',\n        variant: 'destructive',",
          "line": 149,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/admin/services/service-template-builder.tsx",
      "fileName": "service-template-builder.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setShowPreview(!showPreview)",
          "line": 261,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveTemplate",
          "line": 268,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleAddField",
          "line": 307,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleAddField",
          "line": 324,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleMoveField(field.id!, 'up')",
          "line": 390,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleMoveField(field.id!, 'down')",
          "line": 398,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditField(field)",
          "line": 406,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRemoveField(field.id!)",
          "line": 413,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowPreview(!showPreview)",
          "line": 258,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveTemplate",
          "line": 267,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleAddField",
          "line": 307,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleAddField",
          "line": 324,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleMoveField(field.id!, 'up')",
          "line": 387,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleMoveField(field.id!, 'down')",
          "line": 395,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditField(field)",
          "line": 403,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRemoveField(field.id!)",
          "line": 410,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "const loadTemplate = async () => {\n      try {\n        setLoading(true);\n        const response: ScopeDefinitionTemplateResponse = await scopeTemplateApi.getTemplate(serviceId);\n        \n        setServiceInfo({\n          serviceName: response.serviceName,\n          category: response.category,\n          deliveryModel: response.deliveryModel",
          "line": 60,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/admin/services/simple-scope-field-manager.tsx",
      "fileName": "simple-scope-field-manager.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setIsAddingField(true)",
          "line": 281,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "saveTemplate",
          "line": 288,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "addField",
          "line": 419,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsAddingField(false)",
          "line": 420,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => moveField(field.id!, 'up')",
          "line": 463,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => moveField(field.id!, 'down')",
          "line": 472,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => deleteField(field.id!)",
          "line": 502,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsAddingField(true)",
          "line": 280,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "saveTemplate",
          "line": 287,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "addField",
          "line": 419,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsAddingField(false)",
          "line": 420,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => moveField(field.id!, 'up')",
          "line": 460,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => moveField(field.id!, 'down')",
          "line": 469,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => deleteField(field.id!)",
          "line": 499,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setNewField({...newField, name: e.target.value.toLowerCase().replace(/[^a-z0-9_]/g, '_')",
          "line": 314,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewField({...newField, label: e.target.value",
          "line": 322,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewField({...newField, placeholderText: e.target.value",
          "line": 358,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewField({...newField, helpText: e.target.value",
          "line": 366,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewField({\n                        ...newField, \n                        selectOptions: e.target.value.split(',').map(opt => opt.trim()).filter(opt => opt.length > 0)",
          "line": 378,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewField({\n                          ...newField, \n                          validationRules: { ...newField.validationRules, min: parseInt(e.target.value) || undefined",
          "line": 396,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewField({\n                          ...newField, \n                          validationRules: { ...newField.validationRules, max: parseInt(e.target.value) || undefined",
          "line": 408,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "const loadExistingTemplate = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`/api/services/${serviceId",
          "line": 68,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/auth/page-guard.tsx",
      "fileName": "page-guard.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => navigate(-1 as any)",
          "line": 50,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate('/')",
          "line": 56,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate(-1 as any)",
          "line": 48,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate('/')",
          "line": 56,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/dashboard-customizer.tsx",
      "fileName": "dashboard-customizer.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onToggleVisibility",
          "line": 85,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onEdit",
          "line": 94,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onDelete",
          "line": 104,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 161,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 236,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 237,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetToDefaults",
          "line": 320,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleAddCard",
          "line": 329,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 335,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onToggleVisibility",
          "line": 82,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onEdit",
          "line": 91,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onDelete",
          "line": 101,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 161,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 236,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 237,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetToDefaults",
          "line": 317,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleAddCard",
          "line": 327,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 335,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setTitle(e.target.value)",
          "line": 173,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/dashboard-grid.tsx",
      "fileName": "dashboard-grid.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => onEditWidget(widget)",
          "line": 88,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onDeleteWidget(widget.id)",
          "line": 97,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onEditWidget(widget)",
          "line": 85,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onDeleteWidget(widget.id)",
          "line": 94,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "setGridLayout(widgets);",
          "line": 39,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/dynamic-dashboard-card.tsx",
      "fileName": "dynamic-dashboard-card.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onClick",
          "line": 244,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "() => {\n    return {\n      refreshInterval: card.config.refreshInterval || 60",
          "line": 55,
          "pattern": "useMemo"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/enhanced-dashboard-customizer.tsx",
      "fileName": "enhanced-dashboard-customizer.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "resetToDefaults",
          "line": 341,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAddCard(true)",
          "line": 346,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAddCard(true)",
          "line": 363,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDuplicateCard(card)",
          "line": 428,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setEditingCard(card)",
          "line": 435,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRemoveCard(card.id)",
          "line": 443,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => updateConfig({ chartType: chartType.value as 'line' | 'bar' | 'pie' | 'doughnut' | 'area' | 'radar' | 'scatter'",
          "line": 815,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 867,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onSave",
          "line": 870,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetToDefaults",
          "line": 341,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAddCard(true)",
          "line": 346,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAddCard(true)",
          "line": 363,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDuplicateCard(card)",
          "line": 425,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setEditingCard(card)",
          "line": 432,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRemoveCard(card.id)",
          "line": 440,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 867,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onSave",
          "line": 870,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => updateCard({ title: e.target.value",
          "line": 594,
          "pattern": "change"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 14,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/enhanced-dashboard.tsx",
      "fileName": "enhanced-dashboard.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => onViewDetails?.(card.id)",
          "line": 211,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetch()",
          "line": 602,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.location.reload()",
          "line": 635,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCustomizer(!showCustomizer)",
          "line": 644,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                      // Navigate to relevant page based on data source\n                      const navigationMap: Record<string, string> = {\n                        'clients': '/clients',\n                        'contracts': '/contracts',\n                        'services': '/services',\n                        'license_pools': '/license-pools',\n                        'hardware_assets': '/hardware-assets',",
          "line": 667,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCustomizer(true)",
          "line": 700,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetchLicensePools()",
          "line": 725,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/license-pools')",
          "line": 734,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetchLicensePools()",
          "line": 770,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/license-pools')",
          "line": 805,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCustomizer(false)",
          "line": 833,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowDrilldown(false)",
          "line": 899,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetch()",
          "line": 602,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.location.reload()",
          "line": 632,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCustomizer(!showCustomizer)",
          "line": 641,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCustomizer(true)",
          "line": 700,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetchLicensePools()",
          "line": 722,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/license-pools')",
          "line": 731,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetchLicensePools()",
          "line": 769,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/license-pools')",
          "line": 804,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCustomizer(false)",
          "line": 830,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowDrilldown(false)",
          "line": 899,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "setFilters",
          "line": 613,
          "pattern": "change"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 7,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/individual-license-pool-card.tsx",
      "fileName": "individual-license-pool-card.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleViewDetails",
          "line": 91,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/license-pool-card.tsx",
      "fileName": "license-pool-card.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleCardClick",
          "line": 84,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/plugin-testing-panel.tsx",
      "fileName": "plugin-testing-panel.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "testConnection",
          "line": 355,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => executeDefaultQuery(query.id)",
          "line": 460,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "validateQuery",
          "line": 512,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => executeQuery()",
          "line": 520,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "saveQuery",
          "line": 574,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                                  setCustomQuery(query.query);\n                                  setQueryMethod(query.method);\n                                  setActiveTab('custom-query');",
          "line": 611,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => executeSavedQuery(query.id)",
          "line": 621,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "testConnection",
          "line": 354,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => executeDefaultQuery(query.id)",
          "line": 458,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "validateQuery",
          "line": 511,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => executeQuery()",
          "line": 519,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "saveQuery",
          "line": 573,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                                  setCustomQuery(query.query);\n                                  setQueryMethod(query.method);\n                                  setActiveTab('custom-query');",
          "line": 608,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => executeSavedQuery(query.id)",
          "line": 619,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setCustomQuery(e.target.value)",
          "line": 490,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setQueryName(e.target.value)",
          "line": 565,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setQueryDescription(e.target.value)",
          "line": 570,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "loadPlugins();\n    loadSavedQueries();",
          "line": 113,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (selectedPlugin) {\n      loadInstances(selectedPlugin);\n      loadDefaultQueries(selectedPlugin);",
          "line": 119,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 7,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/plugin-widget.tsx",
      "fileName": "plugin-widget.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "fetchData",
          "line": 146,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "fetchData",
          "line": 143,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "fetchData();\n    \n    if (refreshInterval > 0) {\n      const interval = setInterval(fetchData, refreshInterval);\n      return () => clearInterval(interval);",
          "line": 95,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/widget-config-modal.tsx",
      "fileName": "widget-config-modal.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "loadFieldsFromSystem",
          "line": 458,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 511,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 515,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "loadFieldsFromSystem",
          "line": 456,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 511,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 514,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({\n              ...prev,\n              config: { ...prev.config, label: e.target.value",
          "line": 248,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => {\n                    const fields = (formData.config as any).fields || [];\n                    const newFields = e.target.checked\n                      ? [...fields, column]\n                      : fields.filter((f: string) => f !== column);\n                    \n                    setFormData(prev => ({\n                      ...prev,\n                      config: { ...prev.config, fields: newFields",
          "line": 274,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({\n              ...prev,\n              config: { ...prev.config, limit: parseInt(e.target.value) || 10",
          "line": 298,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData(prev => ({ ...prev, title: e.target.value",
          "line": 408,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (widget) {\n      setFormData({\n        title: widget.title || '',\n        widgetType: widget.widgetType || 'kpi',\n        dataSource: widget.dataSource || '',\n        config: widget.config || {",
          "line": 85,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/dashboard/widget-wrapper.tsx",
      "fileName": "widget-wrapper.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "fetchWidgetData",
          "line": 80,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "fetchWidgetData",
          "line": 79,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "fetchWidgetData();",
          "line": 63,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/debug/simple-debug-button.tsx",
      "fileName": "simple-debug-button.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "(e) => e.stopPropagation()",
          "line": 166,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "toggleDebug",
          "line": 169,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "toggleDebug",
          "line": 168,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "handleElementClick, true",
          "line": 134,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "if (isActive) {\n      document.body.style.cursor = 'crosshair';\n      document.addEventListener('click', handleElementClick, true);\n      console.log('🐛 Simple Debug Mode ACTIVATED');",
          "line": 131,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(e: MouseEvent) => {\n    const element = e.target as Element;\n    \n    // Only ignore our debug buttons and panels",
          "line": 15,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 2,
          "severity": "info"
        },
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 4,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 3,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/debug/ui-selector.tsx",
      "fileName": "ui-selector.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "(e) => {\n             e.stopPropagation();\n             console.log('🐛 UI Selector button clicked');\n             setState(prev => {\n               const newState = { \n                 ...prev, \n                 isActive: !prev.isActive,\n                 selectedElement: prev.isActive ? null : prev.selectedElement",
          "line": 334,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "copyDebugInfo",
          "line": 395,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setState(prev => ({ ...prev, selectedElement: null",
          "line": 404,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "(e) => {\n             e.stopPropagation();\n             console.log('🐛 UI Selector button clicked');\n             setState(prev => {\n               const newState = { \n                 ...prev, \n                 isActive: !prev.isActive,\n                 selectedElement: prev.isActive ? null : prev.selectedElement",
          "line": 331,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "copyDebugInfo",
          "line": 392,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setState(prev => ({ ...prev, selectedElement: null",
          "line": 401,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "handleElementClick, true",
          "line": 189,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "handleElementHover",
          "line": 190,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "handleKeyDown",
          "line": 223,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "console.log('🐛 UI Selector Debug Tool loaded');\n    console.log('🐛 Current state:', state);",
          "line": 51,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (state.isActive) {\n      document.addEventListener('click', handleElementClick, true);\n      document.addEventListener('mouseover', handleElementHover);\n      document.body.style.cursor = 'crosshair';\n      \n      return () => {\n        document.removeEventListener('click', handleElementClick, true);\n        document.removeEventListener('mouseover', handleElementHover);\n        document.body.style.cursor = '';",
          "line": 187,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'D' && e.shiftKey && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        console.log('🐛 UI Selector keyboard shortcut triggered');\n        setState(prev => ({ \n          ...prev, \n          isActive: !prev.isActive,\n          selectedElement: prev.isActive ? null : prev.selectedElement",
          "line": 202,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(element: Element): ComponentInfo => {\n    const rect = element.getBoundingClientRect();\n    const computedStyle = window.getComputedStyle(element);\n    \n    // Get all attributes\n    const attributes: Record<string",
          "line": 60,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: MouseEvent) => {\n    if (!state.isActive) return;\n    \n    const target = e.target as Element;\n    \n    // Check if click is on debug buttons or their children\n    if (target.closest('[data-ui-selector-ignore]') || \n        target.closest('[data-debug-ignore]') ||\n        target.closest('button')) {\n      return; // Don't prevent default",
          "line": 147,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: MouseEvent) => {\n    if (!state.isActive) return;\n    \n    const target = e.target as Element;\n    \n    // Don't highlight debug buttons\n    if (target.closest('[data-ui-selector-ignore]') || \n        target.closest('[data-debug-ignore]') ||\n        target.closest('button')) {\n      setState(prev => ({ ...prev",
          "line": 167,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 3,
          "severity": "info"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 8,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/client-form.tsx",
      "fileName": "client-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 266,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 266,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 44,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 44,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: InsertClient) => {",
          "line": 38,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/client-license-form.tsx",
      "fileName": "client-license-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 266,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 266,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 109,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 109,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: ClientLicenseFormData) => {",
          "line": 103,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => field.onChange(parseInt(e.target.value) || 1)",
          "line": 230,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/coc-form.tsx",
      "fileName": "coc-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 277,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 277,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 78,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 78,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: COCFormData) => {",
          "line": 64,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/contract-form.tsx",
      "fileName": "contract-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleAddServiceClick",
          "line": 609,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleAddService(service.id.toString())",
          "line": 629,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRemoveService(selectedService.serviceId)",
          "line": 672,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => document.getElementById('contract-file')?.click()",
          "line": 786,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "removeUploadedFile",
          "line": 808,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 868,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleAddServiceClick",
          "line": 605,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleAddService(service.id.toString())",
          "line": 623,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRemoveService(selectedService.serviceId)",
          "line": 668,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => document.getElementById('contract-file')?.click()",
          "line": 781,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "removeUploadedFile",
          "line": 804,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 868,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 441,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 441,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: ContractFormData) => {",
          "line": 325,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => handleServiceScopeChange(serviceId, field.name, e.target.value)",
          "line": 208,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleServiceScopeChange(serviceId, field.name, e.target.value)",
          "line": 218,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleServiceScopeChange(serviceId, field.name, parseInt(e.target.value) || '')",
          "line": 230,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleServiceScopeChange(serviceId, field.name, parseFloat(e.target.value) || '')",
          "line": 244,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleServiceScopeChange(serviceId, field.name, e.target.value)",
          "line": 268,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleServiceScopeChange(serviceId, field.name, e.target.value)",
          "line": 317,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => {\n                            const value = e.target.value;\n                            // Only allow numbers and decimal points\n                            if (/^\\d*\\.?\\d*$/.test(value) || value === '') {\n                              field.onChange(value);",
          "line": 543,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleFileInputChange",
          "line": 776,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (contract && existingServiceScopes.length > 0) {\n      console.log('Loading existing service scopes:', existingServiceScopes);\n      \n      const existingServices: SelectedService[] = existingServiceScopes.map((scope: any) => {\n        const service = services.find(s => s.id === scope.serviceId);\n        return {\n          serviceId: scope.serviceId,\n          serviceName: service?.name || 'Unknown Service',\n          scopeData: scope.scopeDefinition || {",
          "line": 83,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 1,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/enhanced-service-scope-form.tsx",
      "fileName": "enhanced-service-scope-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 440,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 440,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 167,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 167,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: EnhancedServiceScopeFormData) => {",
          "line": 136,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => field.onChange(parseInt(e.target.value) || 0)",
          "line": 309,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => field.onChange(parseInt(e.target.value) || 0)",
          "line": 383,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => field.onChange(parseInt(e.target.value) || 0)",
          "line": 402,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (watchedValues.siemPoolId && watchedValues.siemLicenses) {\n      validateLicenseAllocation(watchedValues.siemPoolId, watchedValues.siemLicenses);",
          "line": 130,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/financial-transaction-form.tsx",
      "fileName": "financial-transaction-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 205,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 205,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 40,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 40,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: InsertFinancialTransaction) => {",
          "line": 34,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/hardware-asset-form.tsx",
      "fileName": "hardware-asset-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 364,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 364,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 72,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 72,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: HardwareAssetFormData) => {",
          "line": 66,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => field.onChange(parseInt(e.target.value) || 1)",
          "line": 89,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/individual-license-form.tsx",
      "fileName": "individual-license-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 306,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 306,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 48,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 48,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: InsertIndividualLicense) => {",
          "line": 42,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => field.onChange(parseInt(e.target.value) || 1)",
          "line": 132,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/license-pool-form.tsx",
      "fileName": "license-pool-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 300,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 300,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 71,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 71,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: LicensePoolFormData) => {",
          "line": 63,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => field.onChange(parseInt(e.target.value) || 0)",
          "line": 157,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (watchedOrderedLicenses !== undefined) {\n      // If editing existing license pool, add ordered licenses to existing total\n      const existingTotal = licensePool?.totalLicenses || 0;\n      const existingOrdered = licensePool?.orderedLicenses || 0;\n      \n      // Calculate new total: existing total (minus previously ordered) + new ordered\n      const newTotal = existingTotal - existingOrdered + watchedOrderedLicenses;\n      form.setValue(\"totalLicenses\", newTotal);",
          "line": 51,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/password-change-form.tsx",
      "fileName": "password-change-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setShowCurrentPassword(!showCurrentPassword)",
          "line": 155,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowNewPassword(!showNewPassword)",
          "line": 189,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowConfirmPassword(!showConfirmPassword)",
          "line": 251,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCancel",
          "line": 274,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCurrentPassword(!showCurrentPassword)",
          "line": 150,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowNewPassword(!showNewPassword)",
          "line": 184,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowConfirmPassword(!showConfirmPassword)",
          "line": 246,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCancel",
          "line": 274,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 135,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 135,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/saf-form.tsx",
      "fileName": "saf-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 336,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 336,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 93,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 93,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: InsertServiceAuthorizationForm) => {",
          "line": 76,
          "pattern": "onSubmit"
        },
        {
          "type": "event",
          "handler": "if (selectedClientId !== form.getValues(\"clientId\")) {\n      form.setValue(\"contractId\", 0);",
          "line": 70,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/service-form.tsx",
      "fileName": "service-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 189,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 186,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 40,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 40,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: InsertService) => {",
          "line": 34,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/forms/team-assignment-form.tsx",
      "fileName": "team-assignment-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 149,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 149,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 44,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(handleSubmit)",
          "line": 44,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data: InsertClientTeamAssignment) => {",
          "line": 38,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/layout/app-layout.tsx",
      "fileName": "app-layout.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleLogout",
          "line": 130,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "toggleSidebar",
          "line": 150,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "toggleSidebar",
          "line": 159,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleLogout",
          "line": 127,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "toggleSidebar",
          "line": 147,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "toggleSidebar",
          "line": 156,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/layout/dynamic-navigation.tsx",
      "fileName": "dynamic-navigation.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => handleNavigate(page.pageUrl)",
          "line": 164,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleNavigate(page.pageUrl)",
          "line": 162,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/layout/header.tsx",
      "fileName": "header.tsx",
      "handlers": [
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 108,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/layout/mobile-nav.tsx",
      "fileName": "mobile-nav.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setIsOpen(!isOpen)",
          "line": 33,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsOpen(false)",
          "line": 48,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleNavigate(item.href)",
          "line": 77,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleLogout",
          "line": 113,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsOpen(!isOpen)",
          "line": 32,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleNavigate(item.href)",
          "line": 75,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleLogout",
          "line": 110,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/layout/sidebar-fixed.tsx",
      "fileName": "sidebar-fixed.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setIsMobileMenuOpen(!isMobileMenuOpen)",
          "line": 54,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsMobileMenuOpen(false)",
          "line": 66,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleNavigate(item.href)",
          "line": 99,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleNavigate(item.href)",
          "line": 124,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleLogout",
          "line": 159,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleNavigate(item.href)",
          "line": 97,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleNavigate(item.href)",
          "line": 122,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsMobileMenuOpen(!isMobileMenuOpen)",
          "line": 51,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleLogout",
          "line": 156,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "handleResize",
          "line": 43,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "const handleResize = () => {\n      if (window.innerWidth >= 768) {\n        setIsMobileMenuOpen(false);",
          "line": 36,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/onboarding/client-info-form.tsx",
      "fileName": "client-info-form.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onCancel",
          "line": 112,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onSubmit",
          "line": 117,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 112,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onSubmit",
          "line": 115,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) =>\n              setData((prev) => ({ ...prev, clientName: e.target.value",
          "line": 48,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) =>\n              setData((prev) => ({ ...prev, clientEmail: e.target.value",
          "line": 81,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) =>\n              setData((prev) => ({ ...prev, clientPhone: e.target.value",
          "line": 92,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) =>\n              setData((prev) => ({ ...prev, clientAddress: e.target.value",
          "line": 103,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/testing/dashboard-crud-test.tsx",
      "fileName": "dashboard-crud-test.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "runAllTests",
          "line": 583,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "runAllTests",
          "line": 582,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "const total = testSuites.reduce((sum, suite) => sum + suite.tests.length, 0);\n    const passed = testSuites.reduce((sum, suite) => \n      sum + suite.tests.filter(t => t.status === 'passed').length, 0);\n    const failed = testSuites.reduce((sum, suite) => \n      sum + suite.tests.filter(t => t.status === 'failed').length, 0);\n    const pending = total - passed - failed;\n\n    setOverallResults({ total, passed, failed, pending",
          "line": 537,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/advanced-search.tsx",
      "fileName": "advanced-search.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => removeCondition(condition.id)",
          "line": 548,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "addCondition",
          "line": 560,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowSaveDialog(true)",
          "line": 631,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 638,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "executeSearch",
          "line": 671,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                      setSearchConfig(prev => ({\n                        ...prev,\n                        entityTypes: prev.entityTypes.includes(entity.value)\n                          ? prev.entityTypes.filter(t => t !== entity.value)\n                          : [...prev.entityTypes, entity.value]",
          "line": 688,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setSearchConfig(prev => ({\n                            ...prev,\n                            entityTypes: prev.entityTypes.includes(entity.value)\n                              ? prev.entityTypes.filter(t => t !== entity.value)\n                              : [...prev.entityTypes, entity.value]",
          "line": 717,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "executeSearch",
          "line": 777,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => loadSavedSearch(savedSearch)",
          "line": 848,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => applyQuickFilter(filter)",
          "line": 872,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => loadSavedSearch(filter)",
          "line": 900,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowSaveDialog(false)",
          "line": 957,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                  saveSearchMutation.mutate({\n                    name: saveName,\n                    description: saveDescription,\n                    searchConfig,\n                    isPublic,\n                    tags: selectedTags",
          "line": 961,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => removeCondition(condition.id)",
          "line": 545,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "addCondition",
          "line": 558,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowSaveDialog(true)",
          "line": 628,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 638,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "executeSearch",
          "line": 671,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "executeSearch",
          "line": 775,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => loadSavedSearch(savedSearch)",
          "line": 845,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowSaveDialog(false)",
          "line": 957,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                  saveSearchMutation.mutate({\n                    name: saveName,\n                    description: saveDescription,\n                    searchConfig,\n                    isPublic,\n                    tags: selectedTags",
          "line": 960,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => {\n                            const newValue = [new Date(e.target.value), condition.value?.[1] || new Date()];\n                            updateCondition(condition.id, { value: newValue",
          "line": 500,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => {\n                            const newValue = [condition.value?.[0] || new Date(), new Date(e.target.value)];\n                            updateCondition(condition.id, { value: newValue",
          "line": 508,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => updateCondition(condition.id, { value: new Date(e.target.value)",
          "line": 522,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => updateCondition(condition.id, { \n                      value: fieldType === 'number' ? parseFloat(e.target.value) || 0 : e.target.value",
          "line": 534,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchConfig(prev => ({ ...prev, globalQuery: e.target.value",
          "line": 662,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSaveName(e.target.value)",
          "line": 934,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSaveDescription(e.target.value)",
          "line": 943,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => {\n                      if (e.key === 'Enter') {\n                        executeSearch();",
          "line": 663,
          "pattern": "keydown"
        },
        {
          "type": "event",
          "handler": "async () => {\n    if (!searchConfig.globalQuery && searchConfig.conditions.length === 0) {\n      return;\n    }\n\n    setIsSearching(true);\n    try {\n      await searchMutation.mutateAsync(searchConfig);\n    } catch (error) {\n      console.error('Search failed:'",
          "line": 309,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/carousel.tsx",
      "fileName": "carousel.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "scrollPrev",
          "line": 214,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "scrollNext",
          "line": 243,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "scrollPrev",
          "line": 202,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "scrollNext",
          "line": 231,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "if (!api || !setApi) {\n        return",
          "line": 99,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (!api) {\n        return",
          "line": 107,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }",
          "line": 69,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n      api?.scrollPrev()\n    }",
          "line": 78,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n      api?.scrollNext()\n    }",
          "line": 82,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      }",
          "line": 86,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 2,
          "severity": "info"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 69,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/chart.tsx",
      "fileName": "chart.tsx",
      "handlers": [
        {
          "type": "event",
          "handler": "() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config",
          "line": 136,
          "pattern": "useMemo"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/column-visibility.tsx",
      "fileName": "column-visibility.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleReset",
          "line": 84,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleReset",
          "line": 81,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/dashboard-widget.tsx",
      "fileName": "dashboard-widget.tsx",
      "handlers": [],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 4,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/entity-link.tsx",
      "fileName": "entity-link.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleClick",
          "line": 281,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onViewAll",
          "line": 352,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onViewAll",
          "line": 363,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onViewAll",
          "line": 351,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onViewAll",
          "line": 362,
          "pattern": "onClick"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/entity-relationship-tree.tsx",
      "fileName": "entity-relationship-tree.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => hasChildren && onToggleExpand(nodeKey)",
          "line": 109,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "(e) => {\n                      e.stopPropagation();\n                      onNavigate(node.type, node.id);",
          "line": 162,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "(e) => {\n                      e.stopPropagation();\n                      window.open(`/${node.type",
          "line": 183,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "(e) => {\n                      e.stopPropagation();\n                      onNavigate(node.type, node.id);",
          "line": 158,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "(e) => {\n                      e.stopPropagation();\n                      window.open(`/${node.type",
          "line": 179,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/entity-relationships-panel.tsx",
      "fileName": "entity-relationships-panel.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "onViewAll",
          "line": 248,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetch()",
          "line": 351,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onViewAll",
          "line": 245,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetch()",
          "line": 351,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 220,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setGlobalSearch(e.target.value)",
          "line": 450,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (relationshipGroups && relationshipGroups.length > 0 && expandedGroups.size === 0) {\n      setExpandedGroups(new Set([relationshipGroups[0].type]));",
          "line": 307,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/error-boundary.tsx",
      "fileName": "error-boundary.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "this.handleRetry",
          "line": 179,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "this.handleGoHome",
          "line": 183,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "this.handleReportBug",
          "line": 187,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "this.handleRetry",
          "line": 179,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "this.handleGoHome",
          "line": 183,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "this.handleReportBug",
          "line": 187,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "if (error) {\n      throw error;",
          "line": 223,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "() => {\n    setError(null);\n  }",
          "line": 215,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(error: Error) => {\n    setError(error);\n  }",
          "line": 219,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 215,
          "severity": "warning"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 219,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/global-filters.tsx",
      "fileName": "global-filters.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => handleFilterChange(key, '')",
          "line": 249,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleClearAll",
          "line": 260,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleClearAll",
          "line": 291,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleClearAll",
          "line": 327,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleFilterChange(key, '')",
          "line": 245,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleClearAll",
          "line": 257,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleClearAll",
          "line": 291,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleClearAll",
          "line": 327,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => handleFilterChange(filter.key, e.target.value)",
          "line": 91,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleFilterChange(filter.key, parseFloat(e.target.value) || '')",
          "line": 109,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/global-search-header.tsx",
      "fileName": "global-search-header.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => handleResultClick(result)",
          "line": 207,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAdvanced(true)",
          "line": 229,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAdvanced(true)",
          "line": 247,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                            // Apply quick filter logic here\n                            console.log('Apply filter:', filter.name);",
          "line": 282,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRecentSearchClick(search.searchConfig)",
          "line": 304,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleResultClick(result)",
          "line": 328,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAdvanced(true)",
          "line": 348,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsSearchOpen(false)",
          "line": 355,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAdvanced(true)",
          "line": 226,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAdvanced(true)",
          "line": 244,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowAdvanced(true)",
          "line": 346,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsSearchOpen(false)",
          "line": 353,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 187,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 265,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "() => setIsSearchOpen(true)",
          "line": 188,
          "pattern": "focus"
        },
        {
          "type": "event",
          "handler": "handleKeydown",
          "line": 143,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "const timer = setTimeout(() => {\n      if (searchQuery.length >= 2) {\n        quickSearchMutation.mutate(searchQuery);",
          "line": 113,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "const handleKeydown = (e: KeyboardEvent) => {\n      // Cmd/Ctrl + K to focus search\n      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {\n        e.preventDefault();\n        setIsSearchOpen(true);\n        setTimeout(() => searchInputRef.current?.focus(), 100);",
          "line": 127,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 1,
          "severity": "info"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 3,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/history-timeline.tsx",
      "fileName": "history-timeline.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => {\n                setSelectedItem(change);\n                setShowDetails(true);",
          "line": 370,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => rollbackMutation.mutate(change.id)",
          "line": 382,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n              setSelectedItem(audit);\n              setShowDetails(true);",
          "line": 443,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n              setSelectedItem(event);\n              setShowDetails(true);",
          "line": 520,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n              setSelectedItem(access);\n              setShowDetails(true);",
          "line": 586,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => queryClient.invalidateQueries({ queryKey: ['/api/audit']",
          "line": 617,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => toggleBatch(group.batchId)",
          "line": 738,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                setSelectedItem(change);\n                setShowDetails(true);",
          "line": 367,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => rollbackMutation.mutate(change.id)",
          "line": 379,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n              setSelectedItem(audit);\n              setShowDetails(true);",
          "line": 440,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n              setSelectedItem(event);\n              setShowDetails(true);",
          "line": 517,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n              setSelectedItem(access);\n              setShowDetails(true);",
          "line": 583,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => queryClient.invalidateQueries({ queryKey: ['/api/audit']",
          "line": 614,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 641,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "() => {\n    // Add null/undefined check for changeHistory\n    if (!changeHistory || !Array.isArray(changeHistory)) {\n      return [];\n    }\n    \n    const groups: { [key: string]: ChangeHistoryItem[] } = {};\n    \n    changeHistory.forEach(change => {\n      const key = change.batch_id || `single_${change.id}`;\n      if (!groups[key]) groups[key] = [];\n      groups[key].push(change);\n    });\n\n    // Add null check for groups before Object.entries\n    if (!groups || typeof groups !== 'object') {\n      return [];\n    }\n\n    return Object.entries(groups).map(([batchId",
          "line": 238,
          "pattern": "useMemo"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/session-status.tsx",
      "fileName": "session-status.tsx",
      "handlers": [
        {
          "type": "event",
          "handler": "if (!isEnabled) {\n      setTimeRemaining(null);\n      return;",
          "line": 11,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/sidebar.tsx",
      "fileName": "sidebar.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "(event) => {\n        onClick?.(event)\n        toggleSidebar()",
          "line": 283,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "toggleSidebar",
          "line": 308,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "toggleSidebar",
          "line": 303,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "(event) => {\n        onClick?.(event)\n        toggleSidebar()",
          "line": 277,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "handleKeyDown",
          "line": 115,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()",
          "line": 104,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      }",
          "line": 81,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }",
          "line": 97,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }",
          "line": 662,
          "pattern": "useMemo"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 1,
          "severity": "info"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 662,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/ui/virtual-table.tsx",
      "fileName": "virtual-table.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setShowFilters(!showFilters)",
          "line": 124,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "clearFilters",
          "line": 130,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "applyFilters",
          "line": 171,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => column.sortable && handleSort(column.key)",
          "line": 192,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goToFirstPage",
          "line": 251,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goToPrevPage",
          "line": 259,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onPageChange(pageNum)",
          "line": 270,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goToNextPage",
          "line": 279,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goToLastPage",
          "line": 287,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowFilters(!showFilters)",
          "line": 121,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "clearFilters",
          "line": 130,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "applyFilters",
          "line": 171,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goToFirstPage",
          "line": 248,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goToPrevPage",
          "line": 256,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onPageChange(pageNum)",
          "line": 266,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goToNextPage",
          "line": 276,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goToLastPage",
          "line": 284,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => handleFilterChange(column.key, e.target.value)",
          "line": 165,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => e.key === 'Enter' && applyFilters()",
          "line": 166,
          "pattern": "keydown"
        },
        {
          "type": "event",
          "handler": "(column: string) => {\n    if (!onSort) return;\n    \n    const newDirection = sortBy === column && sortOrder === 'asc' ? 'desc' : 'asc';\n    onSort(column",
          "line": 61,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(key: string",
          "line": 69,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    if (onFilter) {\n      onFilter(localFilters);\n    }\n  }",
          "line": 78,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    setLocalFilters({});\n    if (onFilter) {\n      onFilter({});\n    }\n  }",
          "line": 85,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    const pages = [];\n    const maxVisible = 5;\n    let start = Math.max(1",
          "line": 99,
          "pattern": "useMemo"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/widgets/client-widgets-manager.tsx",
      "fileName": "client-widgets-manager.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setShowBuilder(true)",
          "line": 265,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setViewMode('grid')",
          "line": 325,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setViewMode('list')",
          "line": 332,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowBuilder(true)",
          "line": 357,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setPreviewWidget(widget)",
          "line": 440,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setEditingWidget(widget);\n                          setShowBuilder(true);",
          "line": 447,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => duplicateWidget(widget)",
          "line": 457,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => deleteWidget(widget.id)",
          "line": 465,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowBuilder(true)",
          "line": 265,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setViewMode('grid')",
          "line": 322,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setViewMode('list')",
          "line": 329,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowBuilder(true)",
          "line": 357,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setPreviewWidget(widget)",
          "line": 437,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setEditingWidget(widget);\n                          setShowBuilder(true);",
          "line": 444,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => duplicateWidget(widget)",
          "line": 454,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => deleteWidget(widget.id)",
          "line": 462,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 292,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "loadWidgets();\n    loadAvailablePlugins();",
          "line": 99,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 3,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/widgets/dynamic-widget-builder.tsx",
      "fileName": "dynamic-widget-builder.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "addParameter",
          "line": 562,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => removeParameter(key)",
          "line": 585,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleTestQuery",
          "line": 747,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setTestResult(null)",
          "line": 751,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 790,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 793,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "addParameter",
          "line": 562,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => removeParameter(key)",
          "line": 582,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleTestQuery",
          "line": 747,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setTestResult(null)",
          "line": 751,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 790,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 793,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setWidget({ ...widget, name: e.target.value",
          "line": 346,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setWidget({ ...widget, refreshInterval: parseInt(e.target.value) || 30",
          "line": 356,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setWidget({ ...widget, description: e.target.value",
          "line": 368,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "() => setWidget({ ...widget, queryType: 'default', customQuery: ''",
          "line": 485,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "() => setWidget({ ...widget, queryType: 'custom', queryId: ''",
          "line": 493,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setWidget({ ...widget, customQuery: e.target.value",
          "line": 529,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setWidget({\n                          ...widget,\n                          queryParameters: {\n                            ...widget.queryParameters,\n                            [key]: e.target.value",
          "line": 573,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setWidget({\n                        ...widget,\n                        styling: { ...widget.styling, showBorder: e.target.checked",
          "line": 716,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setWidget({\n                        ...widget,\n                        styling: { ...widget.styling, showHeader: e.target.checked",
          "line": 727,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "loadPlugins();\n    if (editingWidget) {\n      setWidget(editingWidget);",
          "line": 134,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/widgets/dynamic-widget-renderer.tsx",
      "fileName": "dynamic-widget-renderer.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "fetchData",
          "line": 511,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onEdit(widget)",
          "line": 520,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "fetchData",
          "line": 508,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onEdit(widget)",
          "line": 517,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "fetchData();\n    \n    // Set up auto-refresh\n    if (widget.refreshInterval > 0) {\n      const interval = setInterval(fetchData, widget.refreshInterval * 1000);\n      return () => clearInterval(interval);",
          "line": 93,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/widgets/global-client-widgets.tsx",
      "fileName": "global-client-widgets.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "loadGlobalWidgets",
          "line": 130,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onManageWidgets",
          "line": 154,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onManageWidgets",
          "line": 172,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onManageWidgets",
          "line": 207,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRefreshWidget(widget.id)",
          "line": 235,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "loadGlobalWidgets",
          "line": 126,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onManageWidgets",
          "line": 151,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onManageWidgets",
          "line": 170,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onManageWidgets",
          "line": 204,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRefreshWidget(widget.id)",
          "line": 232,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "loadGlobalWidgets();",
          "line": 56,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 1,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/widgets/global-widget-manager.tsx",
      "fileName": "global-widget-manager.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "loadWidgets",
          "line": 283,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCreateWidget",
          "line": 304,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 309,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setPreviewWidget(widget)",
          "line": 416,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditWidget(widget)",
          "line": 424,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDuplicateWidget(widget)",
          "line": 432,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteWidget(widget.id)",
          "line": 440,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCreateWidget",
          "line": 466,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "loadWidgets",
          "line": 279,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCreateWidget",
          "line": 304,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onClose",
          "line": 309,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setPreviewWidget(widget)",
          "line": 413,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditWidget(widget)",
          "line": 421,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDuplicateWidget(widget)",
          "line": 429,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteWidget(widget.id)",
          "line": 437,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCreateWidget",
          "line": 466,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 326,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "loadWidgets();",
          "line": 73,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "filterWidgets();",
          "line": 77,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 4,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/widgets/jira-tickets-kpi.tsx",
      "fileName": "jira-tickets-kpi.tsx",
      "handlers": [
        {
          "type": "event",
          "handler": "if (clientShortName) {\n      fetchCount();",
          "line": 34,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/components/widgets/widget-management-panel.tsx",
      "fileName": "widget-management-panel.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setShowBuilder(true)",
          "line": 210,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowBuilder(true)",
          "line": 280,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                        setPreviewWidget(widget);\n                        setShowPreview(true);",
          "line": 300,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                        setEditingWidget(widget);\n                        setShowBuilder(true);",
          "line": 310,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => duplicateWidget(widget)",
          "line": 320,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => deleteWidget(widget.id!)",
          "line": 327,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onWidgetSelect(widget)",
          "line": 368,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowBuilder(true)",
          "line": 210,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowBuilder(true)",
          "line": 280,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                        setPreviewWidget(widget);\n                        setShowPreview(true);",
          "line": 297,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                        setEditingWidget(widget);\n                        setShowBuilder(true);",
          "line": 307,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => duplicateWidget(widget)",
          "line": 317,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => deleteWidget(widget.id!)",
          "line": 324,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => onWidgetSelect(widget)",
          "line": 365,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 226,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFilterPlacement(e.target.value)",
          "line": 235,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFilterDisplayType(e.target.value)",
          "line": 248,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "loadWidgets();",
          "line": 76,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "filterWidgets();",
          "line": 80,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 3,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/contexts/currency-context.tsx",
      "fileName": "currency-context.tsx",
      "handlers": [
        {
          "type": "event",
          "handler": "let initialCurrency = defaultCurrency;\n\n    // Priority order: User settings > Company settings > Browser locale > Default\n    if (userSettings?.preferredCurrency) {\n      initialCurrency = userSettings.preferredCurrency;",
          "line": 69,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "setIsLoading(settingsLoading);",
          "line": 91,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/contexts/theme-context.tsx",
      "fileName": "theme-context.tsx",
      "handlers": [
        {
          "type": "event",
          "handler": "const root = window.document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(theme);\n    \n    // Store in localStorage if storageKey is provided\n    if (storageKey) {\n      localStorage.setItem(storageKey, theme);",
          "line": 45,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (userSettings) {\n      const initialTheme = userSettings.darkMode ? 'dark' : 'light';\n      setThemeState(initialTheme);",
          "line": 57,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-column-preferences.ts",
      "fileName": "use-column-preferences.ts",
      "handlers": [
        {
          "type": "event",
          "handler": "try {\n      localStorage.setItem(storageKey, JSON.stringify(visibleColumns));",
          "line": 36,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "() => {\n    return columns.reduce((acc",
          "line": 11,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(columnKey: string",
          "line": 44,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    const defaultVisibility = getDefaultVisibility();\n    setVisibleColumns(defaultVisibility);\n  }",
          "line": 51,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(columnKey: string) => {\n    const column = columns.find(col => col.key === columnKey);\n    return visibleColumns[columnKey] ?? column?.defaultVisible ?? false;\n  }",
          "line": 56,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-dashboard-settings.ts",
      "fileName": "use-dashboard-settings.ts",
      "handlers": [],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 5,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-debounce.ts",
      "fileName": "use-debounce.ts",
      "handlers": [
        {
          "type": "event",
          "handler": "const handler = setTimeout(() => {\n      setDebouncedValue(value);",
          "line": 6,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-entity-navigation.ts",
      "fileName": "use-entity-navigation.ts",
      "handlers": [
        {
          "type": "event",
          "handler": "if (prefetchRelated && currentEntity) {\n      // Prefetch relationships for current entity\n      queryClient.prefetchQuery({\n        queryKey: ['entity-relationships', currentEntity.type, currentEntity.id],\n        queryFn: async () => {\n          const response = await fetch(`/api/entities/${currentEntity.type",
          "line": 314,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(entity: EntityReference) => {\n    setLocation(entity.url);\n  }",
          "line": 90,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(type: EntityType",
          "line": 94,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(): { type: EntityType; id: number } | null => {\n    // Parse current URL to extract entity type and ID\n    const pathParts = location.split('/').filter(Boolean);\n    \n    if (pathParts.length < 2) return null;\n    \n    // Map URL paths to entity types\n    const urlToTypeMap: Record<string",
          "line": 99,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "async (type: EntityType",
          "line": 136,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(type: EntityType",
          "line": 150,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(type: EntityType",
          "line": 167,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "async (\n    entityType: EntityType",
          "line": 197,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "async (params: EntitySearchParams): Promise<EntitySearchResult> => {\n    try {\n      const searchParams = new URLSearchParams();\n      \n      if (params.query) searchParams.append('query'",
          "line": 227,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(params: EntitySearchParams) => {\n    const queryKey = ['entity-search'",
          "line": 248,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(\n    type: EntityType",
          "line": 264,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(type: EntityType): string => {\n    return getEntityDefinition(type).displayName;\n  }",
          "line": 286,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(type?: EntityType",
          "line": 290,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => ({\n    // Navigation\n    navigateToEntity",
          "line": 332,
          "pattern": "useMemo"
        }
      ],
      "issues": [
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 286,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 3,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-global-error.tsx",
      "fileName": "use-global-error.tsx",
      "handlers": [
        {
          "type": "event",
          "handler": "if (error) {\n      throw error;",
          "line": 65,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(error: Error",
          "line": 48,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    setError(null);\n  }",
          "line": 60,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 60,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 4,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-integrated-data.ts",
      "fileName": "use-integrated-data.ts",
      "handlers": [
        {
          "type": "event",
          "handler": "fetchDataSources();\n    fetchWidgets();",
          "line": 223,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "fetchData();",
          "line": 285,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 5,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-mobile.tsx",
      "fileName": "use-mobile.tsx",
      "handlers": [
        {
          "type": "event",
          "handler": "onChange",
          "line": 13,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1",
          "line": 8,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-paginated-data.ts",
      "fileName": "use-paginated-data.ts",
      "handlers": [
        {
          "type": "event",
          "handler": "if (autoFetch) {\n      fetchData();",
          "line": 106,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "async (params?: Partial<PaginationParams>) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const requestParams: PaginationParams = {\n        page: params?.page ?? currentPage",
          "line": 66,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(page: number) => {\n    fetchData({ page });\n  }",
          "line": 113,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(limit: number) => {\n    fetchData({ page: 1",
          "line": 118,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(column: string",
          "line": 123,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(newFilters: Record<string",
          "line": 128,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    fetchData();\n  }",
          "line": 133,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    setCurrentPage(initialPage);\n    setPageSize(initialPageSize);\n    setSortBy(initialSortBy);\n    setSortOrder(initialSortOrder);\n    setFilters(initialFilters);\n    fetchData({\n      page: initialPage",
          "line": 138,
          "pattern": "useCallback"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-session-timeout.tsx",
      "fileName": "use-session-timeout.tsx",
      "handlers": [
        {
          "type": "event",
          "handler": "if (!settings?.sessionTimeout || !user) {\n      return;",
          "line": 73,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (!settings?.sessionTimeout || !user) {\n      if (timeoutIdRef.current) {\n        clearInterval(timeoutIdRef.current);\n        timeoutIdRef.current = null;",
          "line": 118,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (user) {\n      updateLastActivity();",
          "line": 138,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "() => {\n    lastActivityRef.current = Date.now();\n    warningShownRef.current = false;\n  }",
          "line": 32,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    if (!settings?.sessionTimeout || !user) {\n      return;\n    }\n\n    const now = Date.now();\n    const timeSinceLastActivity = now - lastActivityRef.current;\n    const timeoutMs = timeoutMinutes * 60 * 1000;\n    const warningMs = warningMinutes * 60 * 1000;\n\n    // Check if session should timeout\n    if (timeSinceLastActivity >= timeoutMs) {\n      toast({\n        title: \"Session Expired\"",
          "line": 37,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 32,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/use-toast.ts",
      "fileName": "use-toast.ts",
      "handlers": [
        {
          "type": "event",
          "handler": "listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)",
          "line": 174,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/hooks/useFieldVisibility.ts",
      "fileName": "useFieldVisibility.ts",
      "handlers": [
        {
          "type": "event",
          "handler": "const loadFieldVisibility = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`/api/field-visibility/${tableName",
          "line": 22,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 3,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/lib/api.ts",
      "fileName": "api.ts",
      "handlers": [],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/lib/currency-api.ts",
      "fileName": "currency-api.ts",
      "handlers": [],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/lib/currency-formatter.ts",
      "fileName": "currency-formatter.ts",
      "handlers": [],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 3,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/lib/currency.ts",
      "fileName": "currency.ts",
      "handlers": [],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/lib/enhanced-error.ts",
      "fileName": "enhanced-error.ts",
      "handlers": [],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 1,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/lib/queryClient.ts",
      "fileName": "queryClient.ts",
      "handlers": [],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/lib/system-notifications.ts",
      "fileName": "system-notifications.ts",
      "handlers": [
        {
          "type": "event",
          "handler": "const callback = (newState: SystemNotificationsState) => {\n      setState({ ...newState",
          "line": 99,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(notification: Omit<SystemNotification",
          "line": 111,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(id: string) => {\n    removeSystemNotification(id);\n  }",
          "line": 115,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(id: string) => {\n    markNotificationAsRead(id);\n  }",
          "line": 119,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    markAllNotificationsAsRead();\n  }",
          "line": 123,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    clearAllNotifications();\n  }",
          "line": 127,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 115,
          "severity": "warning"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 119,
          "severity": "warning"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 123,
          "severity": "warning"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 127,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/lib/toast-utils.tsx",
      "fileName": "toast-utils.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "async () => {\n          const success = await copyToClipboard(fullErrorText);\n          if (success) {\n            toast({ \n              title: \"Copied!\", \n              description: \"Error details copied to clipboard\",\n              duration: 2000",
          "line": 66,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/main.tsx",
      "fileName": "main.tsx",
      "handlers": [],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 1,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/admin/audit-management-page.tsx",
      "fileName": "audit-management-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "refreshAllData",
          "line": 363,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => exportLogs(activeTab)",
          "line": 372,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "refreshAllData",
          "line": 361,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => exportLogs(activeTab)",
          "line": 370,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 343,
          "pattern": "change"
        }
      ],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 1,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/admin/navigation-manager-page.tsx",
      "fileName": "navigation-manager-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleReset",
          "line": 408,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetch()",
          "line": 417,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 425,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleReset",
          "line": 406,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => refetch()",
          "line": 415,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 424,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 401,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "const sortedItems = [...navigationItems].sort((a, b) => a.sortOrder - b.sortOrder);\n    setItems(sortedItems);\n    setOriginalItems(sortedItems);\n    setHasChanges(false);",
          "line": 226,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/admin/rbac-page.tsx",
      "fileName": "rbac-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "fetchPermissions",
          "line": 180,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "savePermissions",
          "line": 187,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "fetchPermissions",
          "line": 178,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "savePermissions",
          "line": 186,
          "pattern": "onClick"
        },
        {
          "type": "event",
          "handler": "fetchPermissions();",
          "line": 42,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/admin/service-template-demo.tsx",
      "fileName": "service-template-demo.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setLocation('/admin')",
          "line": 23,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation('/admin')",
          "line": 21,
          "pattern": "onClick"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/admin/user-management-page.tsx",
      "fileName": "user-management-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => {\n                            setIsCreateDialogOpen(false);\n                            setEditingUser(null);",
          "line": 488,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                              setEditingUser(user);\n                              setIsCreateDialogOpen(true);",
          "line": 562,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteUser(user.id)",
          "line": 573,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                            setIsCreateDialogOpen(false);\n                            setEditingUser(null);",
          "line": 488,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                              setEditingUser(user);\n                              setIsCreateDialogOpen(true);",
          "line": 559,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteUser(user.id)",
          "line": 570,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 364,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 364,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 330,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (editingUser) {\n      form.reset({\n        username: editingUser.username,\n        email: editingUser.email,\n        firstName: editingUser.firstName,\n        lastName: editingUser.lastName,\n        role: editingUser.role,\n        isActive: editingUser.isActive,",
          "line": 171,
          "pattern": "useEffect"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/admin-dashboard-page.tsx",
      "fileName": "admin-dashboard-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => navigate(feature.href)",
          "line": 166,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate(feature.href)",
          "line": 165,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/assets-page.tsx",
      "fileName": "assets-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => handleEditHardware(asset)",
          "line": 479,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteHardware(asset.id)",
          "line": 486,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => togglePoolExpansion(license.id)",
          "line": 551,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditLicense(license)",
          "line": 622,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteLicense(license.id)",
          "line": 629,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditHardware(asset)",
          "line": 476,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteHardware(asset.id)",
          "line": 483,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => togglePoolExpansion(license.id)",
          "line": 548,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditLicense(license)",
          "line": 619,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteLicense(license.id)",
          "line": 626,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleHardwareSubmit",
          "line": 346,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleLicenseSubmit",
          "line": 367,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 387,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/auth-page.tsx",
      "fileName": "auth-page.tsx",
      "handlers": [
        {
          "type": "submit",
          "handler": "handleLogin",
          "line": 69,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleRegister",
          "line": 111,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleLogin",
          "line": 69,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleRegister",
          "line": 111,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setLoginData({ ...loginData, username: e.target.value",
          "line": 76,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setLoginData({ ...loginData, password: e.target.value",
          "line": 86,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setRegisterData({ ...registerData, firstName: e.target.value",
          "line": 118,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setRegisterData({ ...registerData, lastName: e.target.value",
          "line": 127,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setRegisterData({ ...registerData, email: e.target.value",
          "line": 138,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setRegisterData({ ...registerData, username: e.target.value",
          "line": 147,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setRegisterData({ ...registerData, password: e.target.value",
          "line": 157,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (user) {\n      setLocation(\"/\");",
          "line": 25,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/client-detail-page.tsx",
      "fileName": "client-detail-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setLocation(\"/clients\")",
          "line": 623,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/clients\")",
          "line": 643,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(contract.documentUrl!, '_blank')",
          "line": 956,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(proposal.documentUrl, '_blank')",
          "line": 1055,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/create-saf?clientId=${clientId",
          "line": 1394,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(saf.documentUrl, '_blank')",
          "line": 1491,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/create-saf?clientId=${clientId",
          "line": 1510,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/create-coc?clientId=${clientId",
          "line": 1525,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(coc.documentUrl, '_blank')",
          "line": 1648,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/create-coc?clientId=${clientId",
          "line": 1668,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open('/documents', '_blank')",
          "line": 1690,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(doc)",
          "line": 1783,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handlePreview(doc)",
          "line": 1793,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(doc)",
          "line": 1836,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open('/documents', '_blank')",
          "line": 1854,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/clients\")",
          "line": 623,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/clients\")",
          "line": 641,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(contract.documentUrl!, '_blank')",
          "line": 953,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(proposal.documentUrl, '_blank')",
          "line": 1052,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/create-saf?clientId=${clientId",
          "line": 1393,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(saf.documentUrl, '_blank')",
          "line": 1488,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/create-saf?clientId=${clientId",
          "line": 1510,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/create-coc?clientId=${clientId",
          "line": 1524,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(coc.documentUrl, '_blank')",
          "line": 1645,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/create-coc?clientId=${clientId",
          "line": 1668,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open('/documents', '_blank')",
          "line": 1688,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(doc)",
          "line": 1780,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handlePreview(doc)",
          "line": 1790,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(doc)",
          "line": 1833,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open('/documents', '_blank')",
          "line": 1854,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleFormSubmit",
          "line": 663,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data) => assignLicenseMutation.mutate(data)",
          "line": 1238,
          "pattern": "onSubmit"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 16,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/client-onboarding-page.tsx",
      "fileName": "client-onboarding-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setShowForm(false)",
          "line": 332,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleFormSubmit('contract-setup')",
          "line": 336,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowForm(false)",
          "line": 429,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleFormSubmit('service-scopes')",
          "line": 433,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCelebration(false)",
          "line": 574,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetOnboarding",
          "line": 590,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep(index)",
          "line": 641,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowForm(true)",
          "line": 708,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleFormSubmit(onboardingSteps[currentStep].id)",
          "line": 716,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => markStepIncomplete(onboardingSteps[currentStep].id)",
          "line": 727,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep(Math.max(0, currentStep - 1))",
          "line": 738,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep(Math.min(onboardingSteps.length - 1, currentStep + 1))",
          "line": 744,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowForm(false)",
          "line": 332,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleFormSubmit('contract-setup')",
          "line": 335,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowForm(false)",
          "line": 429,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleFormSubmit('service-scopes')",
          "line": 432,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCelebration(false)",
          "line": 574,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetOnboarding",
          "line": 590,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep(index)",
          "line": 633,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowForm(true)",
          "line": 707,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleFormSubmit(onboardingSteps[currentStep].id)",
          "line": 715,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => markStepIncomplete(onboardingSteps[currentStep].id)",
          "line": 725,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep(Math.max(0, currentStep - 1))",
          "line": 736,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep(Math.min(onboardingSteps.length - 1, currentStep + 1))",
          "line": 743,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "() => handleFormSubmit('client-info')",
          "line": 278,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "handleValueChange",
          "line": 308,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleStartDateChange",
          "line": 318,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleEndDateChange",
          "line": 327,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleEndpointsChange",
          "line": 413,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleEpsChange",
          "line": 423,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "const savedProgress = localStorage.getItem('onboarding-progress');\n    if (savedProgress) {\n      const { currentStep: savedStep, completedSteps: savedCompleted",
          "line": 255,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "localStorage.setItem('onboarding-progress', JSON.stringify({\n      currentStep,\n      completedSteps",
          "line": 265,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(value: string) => {\n    setFormData(prev => ({ ...prev",
          "line": 159,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({ ...prev",
          "line": 163,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({ ...prev",
          "line": 167,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({ ...prev",
          "line": 171,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(value: string) => {\n    setFormData(prev => ({ ...prev",
          "line": 176,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(value: string) => {\n    setFormData(prev => ({ ...prev",
          "line": 180,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({ ...prev",
          "line": 184,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({ ...prev",
          "line": 188,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-lg font-semibold\">Create Contract</h3>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"contractType\">Contract Type *</Label>\n          <Select value={formData.contractType} onValueChange={handleContractTypeChange}>\n            <SelectTrigger id=\"contractType\">\n              <SelectValue placeholder=\"Select contract type\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"msa\">Master Service Agreement (MSA)</SelectItem>\n              <SelectItem value=\"sow\">Statement of Work (SOW)</SelectItem>\n              <SelectItem value=\"support\">Support Contract</SelectItem>\n              <SelectItem value=\"maintenance\">Maintenance Agreement</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n        <div>\n          <Label htmlFor=\"value\">Contract Value</Label>\n          <Input\n            id=\"value\"\n            type=\"number\"\n            value={formData.value || ''}\n            onChange={handleValueChange}\n            placeholder=\"Enter contract value\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"startDate\">Start Date *</Label>\n          <Input\n            id=\"startDate\"\n            type=\"date\"\n            value={formData.startDate || ''}\n            onChange={handleStartDateChange}\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"endDate\">End Date *</Label>\n          <Input\n            id=\"endDate\"\n            type=\"date\"\n            value={formData.endDate || ''}\n            onChange={handleEndDateChange}\n          />\n        </div>\n      </div>\n      <div className=\"flex justify-end space-x-3\">\n        <Button variant=\"outline\" onClick={() => setShowForm(false)}>\n          Cancel\n        </Button>\n        <Button\n          onClick={() => handleFormSubmit('contract-setup')}\n          disabled={!formData.contractType || !formData.startDate || !formData.endDate || createContractMutation.isPending}\n        >\n          {createContractMutation.isPending ? 'Creating...' : 'Create Contract'}\n        </Button>\n      </div>\n    </div>\n  )",
          "line": 284,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-lg font-semibold\">Configure Service</h3>\n      \n      {/* Pool Status Display */}\n      {poolStatus && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <h4 className=\"font-semibold text-blue-800 mb-2\">📊 Current License Pool Status</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n            {Object.entries(poolStatus.licenseStatus || {}).map(([type",
          "line": 346,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => [\n    {\n      id: 'client-info'",
          "line": 443,
          "pattern": "useMemo"
        },
        {
          "type": "event",
          "handler": "() => \n    (completedSteps.length / onboardingSteps.length) * 100",
          "line": 528,
          "pattern": "useMemo"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/clients-page.tsx",
      "fileName": "clients-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => {\n                        queryClient.invalidateQueries({ queryKey: [\"/api/clients\"]",
          "line": 487,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleBulkArchive",
          "line": 497,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportToCSV",
          "line": 501,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEdit(client)",
          "line": 648,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleArchive(client)",
          "line": 651,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRestore(client.id)",
          "line": 841,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowDeletionDialog(false)",
          "line": 903,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "confirmArchive",
          "line": 908,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                        queryClient.invalidateQueries({ queryKey: [\"/api/clients\"]",
          "line": 484,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleBulkArchive",
          "line": 497,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportToCSV",
          "line": 501,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEdit(client)",
          "line": 648,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleArchive(client)",
          "line": 651,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleRestore(client.id)",
          "line": 838,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowDeletionDialog(false)",
          "line": 903,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "confirmArchive",
          "line": 906,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "(data) => {\n                                if (editingClient) {\n                                  updateClientMutation.mutate({ id: editingClient.id, client: data",
          "line": 447,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(newFilterValues) => {\n                    setFilterValues(newFilterValues);\n                    // Update individual filter states for backward compatibility\n                    setStatusFilter(newFilterValues.status || \"all\");\n                    setSourceFilter(newFilterValues.source || \"all\");",
          "line": 407,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 474,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 684,
          "pattern": "change"
        }
      ],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 1,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/coc-page.tsx",
      "fileName": "coc-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => handleDownload(coc)",
          "line": 397,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditCOC(coc)",
          "line": 405,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteCOC(coc.id)",
          "line": 412,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(coc)",
          "line": 394,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditCOC(coc)",
          "line": 402,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteCOC(coc.id)",
          "line": 409,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleCOCSubmit",
          "line": 288,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 306,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/comprehensive-bulk-import.tsx",
      "fileName": "comprehensive-bulk-import.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => goToStep(step as 'input' | 'mapping' | 'preview' | 'results')",
          "line": 883,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "generateSampleData",
          "line": 923,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetWizard",
          "line": 927,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleDataParse",
          "line": 951,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep('input')",
          "line": 1209,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleImport",
          "line": 1213,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep('mapping')",
          "line": 1252,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep('results')",
          "line": 1256,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep('mapping')",
          "line": 1354,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetWizard",
          "line": 1358,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.location.href = '/clients'",
          "line": 1363,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => goToStep(step as 'input' | 'mapping' | 'preview' | 'results')",
          "line": 882,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "generateSampleData",
          "line": 923,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetWizard",
          "line": 927,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleDataParse",
          "line": 951,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep('input')",
          "line": 1209,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleImport",
          "line": 1213,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep('mapping')",
          "line": 1252,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep('results')",
          "line": 1256,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setCurrentStep('mapping')",
          "line": 1354,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetWizard",
          "line": 1358,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.location.href = '/clients'",
          "line": 1363,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setPastedData(e.target.value)",
          "line": 939,
          "pattern": "change"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/contract-detail-page.tsx",
      "fileName": "contract-detail-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setLocation(\"/contracts\")",
          "line": 200,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/contracts\")",
          "line": 217,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsEditOpen(true)",
          "line": 222,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(contract.documentUrl!, '_blank')",
          "line": 227,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(coc.documentUrl!, '_blank')",
          "line": 489,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(`/uploads/${doc.fileName",
          "line": 537,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/contracts\")",
          "line": 200,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/contracts\")",
          "line": 217,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsEditOpen(true)",
          "line": 222,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(contract.documentUrl!, '_blank')",
          "line": 227,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(coc.documentUrl!, '_blank')",
          "line": 485,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(`/uploads/${doc.fileName",
          "line": 534,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "(data) => updateContractMutation.mutate(data)",
          "line": 681,
          "pattern": "onSubmit"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 4,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/contracts-page.tsx",
      "fileName": "contracts-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setLocation(`/contracts/${contract.id",
          "line": 315,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEdit(contract)",
          "line": 388,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(contract.id)",
          "line": 395,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(`/contracts/${contract.id",
          "line": 314,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEdit(contract)",
          "line": 385,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(contract.id)",
          "line": 392,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleFormSubmit",
          "line": 239,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 258,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/create-coc-page.tsx",
      "fileName": "create-coc-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleCancel",
          "line": 531,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCancel",
          "line": 528,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 192,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 192,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/create-saf-page.tsx",
      "fileName": "create-saf-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleCancel",
          "line": 410,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCancel",
          "line": 407,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 166,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 166,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/documents-page.tsx",
      "fileName": "documents-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => fileInputRef.current?.click()",
          "line": 568,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "clearAllFiles",
          "line": 584,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleUploadAll",
          "line": 590,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => removeUploadFile(uploadFile.id)",
          "line": 683,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                      setIsUploadOpen(false);\n                      setUploadFiles([]);",
          "line": 699,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(doc)",
          "line": 872,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handlePreview(doc)",
          "line": 881,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleShare(doc)",
          "line": 887,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(doc.id)",
          "line": 894,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(doc)",
          "line": 941,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handlePreview(doc)",
          "line": 950,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleShare(doc)",
          "line": 956,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(doc.id)",
          "line": 963,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => fileInputRef.current?.click()",
          "line": 565,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "clearAllFiles",
          "line": 581,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleUploadAll",
          "line": 589,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => removeUploadFile(uploadFile.id)",
          "line": 680,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                      setIsUploadOpen(false);\n                      setUploadFiles([]);",
          "line": 696,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(doc)",
          "line": 869,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handlePreview(doc)",
          "line": 878,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleShare(doc)",
          "line": 887,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(doc.id)",
          "line": 891,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(doc)",
          "line": 938,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handlePreview(doc)",
          "line": 947,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleShare(doc)",
          "line": 956,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(doc.id)",
          "line": 960,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "handleFileInputChange",
          "line": 561,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 719,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "(e",
          "line": 197,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "(",
          "line": 204,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "(",
          "line": 221,
          "pattern": "addEventListener"
        },
        {
          "type": "event",
          "handler": "fetchDocuments();",
          "line": 55,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "(files: FileList | File[]) => {\n    const fileArray = Array.from(files);\n    const newUploadFiles: UploadFile[] = [];\n\n    fileArray.forEach((file) => {\n      const validation = validateFile(file);\n      \n      newUploadFiles.push({\n        file",
          "line": 118,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  }",
          "line": 141,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      handleFileSelect(e.dataTransfer.files);\n    }\n  }",
          "line": 152,
          "pattern": "useCallback"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 2,
          "severity": "info"
        },
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 1,
          "severity": "warning"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 141,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 4,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/entity-navigation-demo.tsx",
      "fileName": "entity-navigation-demo.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => {\n                        setSelectedEntityTypes(prev =>\n                          prev.includes(type)\n                            ? prev.filter(t => t !== type)\n                            : [...prev, type]\n                        );",
          "line": 311,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigateToEntity(entity)",
          "line": 389,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigateToEntity(entity)",
          "line": 386,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setDemoEntityType(e.target.value as any)",
          "line": 240,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setDemoEntityId(parseInt(e.target.value) || 1)",
          "line": 256,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 297,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/field-visibility-manager.tsx",
      "fileName": "field-visibility-manager.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => resetTableConfiguration(tableConfig.tableName)",
          "line": 619,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => resetTableConfiguration(tableConfig.tableName)",
          "line": 617,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 566,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSelectedCategory(e.target.value)",
          "line": 572,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "const loadFieldVisibility = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('/api/field-visibility');\n        if (!response.ok) {\n          throw new Error('Failed to load field visibility configurations');",
          "line": 414,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 3,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/financial-page.tsx",
      "fileName": "financial-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setIsDialogOpen(false)",
          "line": 430,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsDialogOpen(false)",
          "line": 430,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 311,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 311,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 455,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "fetchTransactions();",
          "line": 114,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/home-page.tsx",
      "fileName": "home-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => handleCardClick(card)",
          "line": 145,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCustomizer(true)",
          "line": 160,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowWidgetManager(false)",
          "line": 257,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCustomizer(true)",
          "line": 160,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowWidgetManager(false)",
          "line": 254,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/license-pool-detail-page.tsx",
      "fileName": "license-pool-detail-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => navigate('/assets')",
          "line": 215,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate('/assets')",
          "line": 231,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate(`/clients/${assignment.clientId",
          "line": 541,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate('/assets')",
          "line": 215,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate('/assets')",
          "line": 231,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate(`/clients/${assignment.clientId",
          "line": 541,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "(data) => updateLicensePoolMutation.mutate(data)",
          "line": 257,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(data) => assignLicenseMutation.mutate(data)",
          "line": 278,
          "pattern": "onSubmit"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/license-pools-page.tsx",
      "fileName": "license-pools-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setIsCreateDialogOpen(false)",
          "line": 368,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCreatePool",
          "line": 371,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate(`/license-pools/${pool.id",
          "line": 515,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeletePool(pool.id)",
          "line": 522,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsCreateDialogOpen(false)",
          "line": 368,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleCreatePool",
          "line": 371,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => navigate(`/license-pools/${pool.id",
          "line": 512,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeletePool(pool.id)",
          "line": 519,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 256,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewPoolData({ ...newPoolData, name: e.target.value",
          "line": 302,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewPoolData({ ...newPoolData, productName: e.target.value",
          "line": 313,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewPoolData({ ...newPoolData, vendor: e.target.value",
          "line": 324,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewPoolData({ ...newPoolData, licenseType: e.target.value",
          "line": 335,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => {\n                      const total = parseInt(e.target.value, 10) || 0;\n                      setNewPoolData({ ...newPoolData, totalLicenses: total, availableLicenses: total",
          "line": 347,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setNewPoolData(prev => ({ ...prev, description: e.target.value",
          "line": 361,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/login-page.tsx",
      "fileName": "login-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => {\n                          setLocalCredentials({\n                            email: \"admin@mssp.local\",\n                            password: \"admin123\"",
          "line": 143,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setLocalCredentials({\n                            email: \"manager@mssp.local\",\n                            password: \"admin123\"",
          "line": 157,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setLocalCredentials({\n                            email: \"engineer@mssp.local\",\n                            password: \"admin123\"",
          "line": 171,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setLocalCredentials({\n                            email: \"user@mssp.local\",\n                            password: \"admin123\"",
          "line": 185,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                      setLdapCredentials({\n                        username: \"einstein\",\n                        password: \"password\"",
          "line": 250,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/register\")",
          "line": 291,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setLocalCredentials({\n                            email: \"admin@mssp.local\",\n                            password: \"admin123\"",
          "line": 138,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setLocalCredentials({\n                            email: \"manager@mssp.local\",\n                            password: \"admin123\"",
          "line": 152,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setLocalCredentials({\n                            email: \"engineer@mssp.local\",\n                            password: \"admin123\"",
          "line": 166,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                          setLocalCredentials({\n                            email: \"user@mssp.local\",\n                            password: \"admin123\"",
          "line": 180,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                      setLdapCredentials({\n                        username: \"einstein\",\n                        password: \"password\"",
          "line": 245,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/register\")",
          "line": 288,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleLocalSubmit",
          "line": 91,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleLdapSubmit",
          "line": 201,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleLocalSubmit",
          "line": 91,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleLdapSubmit",
          "line": 201,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "handleLocalInputChange",
          "line": 99,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleLocalInputChange",
          "line": 112,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleLdapInputChange",
          "line": 209,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleLdapInputChange",
          "line": 222,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (user) {\n      setLocation(\"/\");",
          "line": 22,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (loginMutation.isSuccess && loginMutation.data) {\n      setLocation(\"/\");",
          "line": 29,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (ldapLoginMutation.isSuccess && ldapLoginMutation.data) {\n      setLocation(\"/\");",
          "line": 36,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/not-found.tsx",
      "fileName": "not-found.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "goBack",
          "line": 40,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goHome",
          "line": 44,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goBack",
          "line": 40,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "goHome",
          "line": 44,
          "pattern": "onClick"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/plugins-page.tsx",
      "fileName": "plugins-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "testConnection",
          "line": 138,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => useDefaultQuery(dq)",
          "line": 232,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "runQuery",
          "line": 261,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setEditingInstance(null)",
          "line": 661,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 664,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleTestConnection(plugin.systemName, instance.id)",
          "line": 819,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setEditingInstance(instance)",
          "line": 834,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteInstance(plugin.systemName, instance.id, instance.name)",
          "line": 844,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleInstanceToggle(plugin.systemName, instance.id, !instance.isActive)",
          "line": 855,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 1086,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "testConnection",
          "line": 135,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => useDefaultQuery(dq)",
          "line": 228,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "runQuery",
          "line": 261,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setEditingInstance(null)",
          "line": 661,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSave",
          "line": 664,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleTestConnection(plugin.systemName, instance.id)",
          "line": 816,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setEditingInstance(instance)",
          "line": 831,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteInstance(plugin.systemName, instance.id, instance.name)",
          "line": 841,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleInstanceToggle(plugin.systemName, instance.id, !instance.isActive)",
          "line": 852,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "onCancel",
          "line": 1086,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleCreateInstance",
          "line": 734,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleSubmit",
          "line": 934,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleSubmit",
          "line": 934,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(e: React.FormEvent) => {",
          "line": 916,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setMethod(e.target.value)",
          "line": 247,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setQuery(e.target.value)",
          "line": 258,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({ ...formData, name: e.target.value",
          "line": 539,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({ ...formData, baseUrl: e.target.value",
          "line": 547,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({ ...formData, authType: e.target.value as any",
          "line": 558,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                      ...formData,\n                      authConfig: { ...formData.authConfig, username: e.target.value",
          "line": 575,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                      ...formData,\n                      authConfig: { ...formData.authConfig, password: e.target.value",
          "line": 587,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                    ...formData,\n                    authConfig: { ...formData.authConfig, token: e.target.value",
          "line": 603,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                      ...formData,\n                      authConfig: { ...formData.authConfig, key: e.target.value",
          "line": 619,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                      ...formData,\n                      authConfig: { ...formData.authConfig, header: e.target.value",
          "line": 630,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                  ...formData,\n                  tags: e.target.value.split(',').map(tag => tag.trim()).filter(Boolean)",
          "line": 644,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setSelectedPluginType(e.target.value)",
          "line": 940,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({ ...formData, name: e.target.value",
          "line": 964,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({ ...formData, baseUrl: e.target.value",
          "line": 974,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({ ...formData, authType: e.target.value",
          "line": 986,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                ...formData,\n                authConfig: { ...formData.authConfig, username: e.target.value",
          "line": 1003,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                ...formData,\n                authConfig: { ...formData.authConfig, password: e.target.value",
          "line": 1015,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n              ...formData,\n              authConfig: { ...formData.authConfig, token: e.target.value",
          "line": 1031,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                ...formData,\n                authConfig: { ...formData.authConfig, key: e.target.value",
          "line": 1047,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({\n                ...formData,\n                authConfig: { ...formData.authConfig, header: e.target.value",
          "line": 1058,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setFormData({ ...formData, tags: e.target.value",
          "line": 1072,
          "pattern": "change"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 1,
          "severity": "info"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/profile-page.tsx",
      "fileName": "profile-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleProfileUpdate",
          "line": 206,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCurrentPassword(!showCurrentPassword)",
          "line": 237,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowNewPassword(!showNewPassword)",
          "line": 257,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handlePasswordChange",
          "line": 272,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handlePreferencesUpdate",
          "line": 337,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handlePreferencesUpdate",
          "line": 400,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleProfileUpdate",
          "line": 206,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowCurrentPassword(!showCurrentPassword)",
          "line": 232,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setShowNewPassword(!showNewPassword)",
          "line": 252,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handlePasswordChange",
          "line": 272,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handlePreferencesUpdate",
          "line": 337,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handlePreferencesUpdate",
          "line": 400,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setProfileData(prev => ({ ...prev, firstName: e.target.value",
          "line": 178,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setProfileData(prev => ({ ...prev, lastName: e.target.value",
          "line": 186,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setProfileData(prev => ({ ...prev, email: e.target.value",
          "line": 196,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setPasswordData(prev => ({ ...prev, currentPassword: e.target.value",
          "line": 230,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setPasswordData(prev => ({ ...prev, newPassword: e.target.value",
          "line": 250,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setPasswordData(prev => ({ ...prev, confirmPassword: e.target.value",
          "line": 269,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/proposals-page.tsx",
      "fileName": "proposals-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setIsDialogOpen(false)",
          "line": 552,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsDialogOpen(true)",
          "line": 646,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(proposal.documentUrl!, '_blank')",
          "line": 717,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewDetails(proposal)",
          "line": 723,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEdit(proposal)",
          "line": 727,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(selectedProposal.documentUrl!, '_blank')",
          "line": 796,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => document.getElementById('proposal-file')?.click()",
          "line": 979,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "removeUploadedFile",
          "line": 1001,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                      setIsEditOpen(false);\n                      setSelectedProposal(null);\n                      form.reset();\n                      setUploadedFile(null);",
          "line": 1104,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsDialogOpen(false)",
          "line": 552,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsDialogOpen(true)",
          "line": 646,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(proposal.documentUrl!, '_blank')",
          "line": 714,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewDetails(proposal)",
          "line": 723,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEdit(proposal)",
          "line": 727,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.open(selectedProposal.documentUrl!, '_blank')",
          "line": 794,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => document.getElementById('proposal-file')?.click()",
          "line": 974,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "removeUploadedFile",
          "line": 997,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                      setIsEditOpen(false);\n                      setSelectedProposal(null);\n                      form.reset();\n                      setUploadedFile(null);",
          "line": 1101,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 373,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 829,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 373,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 829,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "handleFileInputChange",
          "line": 969,
          "pattern": "change"
        }
      ],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 1,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/rbac-management-page.tsx",
      "fileName": "rbac-management-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "resetChanges",
          "line": 232,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "saveChanges",
          "line": 236,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "resetChanges",
          "line": 232,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "saveChanges",
          "line": 236,
          "pattern": "onClick"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/register-page.tsx",
      "fileName": "register-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setLocation(\"/login\")",
          "line": 263,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setLocation(\"/login\")",
          "line": 261,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleSubmit",
          "line": 134,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleSubmit",
          "line": 134,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "(e: React.FormEvent) => {",
          "line": 100,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 143,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 159,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 177,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 194,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 211,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 228,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (user) {\n      setLocation(\"/\");",
          "line": 34,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/reports-page.tsx",
      "fileName": "reports-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "exportRevenueAnalysis",
          "line": 520,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportInvoiceSummary",
          "line": 527,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportPaymentHistory",
          "line": 534,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportClientReports",
          "line": 552,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportServiceReports",
          "line": 559,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportContractReports",
          "line": 566,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportSecurityReports",
          "line": 584,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportSecurityReports",
          "line": 591,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportComplianceReports",
          "line": 598,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewReport('financial-q4-2024')",
          "line": 624,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewReport('client-service-q4-2024')",
          "line": 640,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewReport('security-incident-dec-2024')",
          "line": 656,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportRevenueAnalysis",
          "line": 520,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportInvoiceSummary",
          "line": 527,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportPaymentHistory",
          "line": 534,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportClientReports",
          "line": 552,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportServiceReports",
          "line": 559,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportContractReports",
          "line": 566,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportSecurityReports",
          "line": 584,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportSecurityReports",
          "line": 591,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "exportComplianceReports",
          "line": 598,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewReport('financial-q4-2024')",
          "line": 624,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewReport('client-service-q4-2024')",
          "line": 640,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewReport('security-incident-dec-2024')",
          "line": 656,
          "pattern": "onClick"
        }
      ],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 9,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/saf-page.tsx",
      "fileName": "saf-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => handleDownload(saf)",
          "line": 369,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditSAF(saf)",
          "line": 377,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteSAF(saf.id)",
          "line": 384,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDownload(saf)",
          "line": 366,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditSAF(saf)",
          "line": 374,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteSAF(saf.id)",
          "line": 381,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleSAFSubmit",
          "line": 271,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 290,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/service-scopes-page.tsx",
      "fileName": "service-scopes-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setViewMode(viewMode === 'table' ? 'cards' : 'table')",
          "line": 390,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsDialogOpen(false)",
          "line": 536,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsAdvancedFilterOpen(!isAdvancedFilterOpen)",
          "line": 582,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "clearAllFilters",
          "line": 679,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewDetails(scope)",
          "line": 741,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditScope(scope)",
          "line": 748,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(scope.id)",
          "line": 755,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsEditDialogOpen(false)",
          "line": 956,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setViewMode(viewMode === 'table' ? 'cards' : 'table')",
          "line": 387,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsDialogOpen(false)",
          "line": 536,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsAdvancedFilterOpen(!isAdvancedFilterOpen)",
          "line": 579,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "clearAllFilters",
          "line": 676,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleViewDetails(scope)",
          "line": 738,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditScope(scope)",
          "line": 745,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(scope.id)",
          "line": 752,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsEditDialogOpen(false)",
          "line": 956,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 407,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "editForm.handleSubmit(onEditSubmit)",
          "line": 827,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "form.handleSubmit(onSubmit)",
          "line": 407,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "editForm.handleSubmit(onEditSubmit)",
          "line": 827,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 559,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setEpsMin(e.target.value)",
          "line": 631,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setEpsMax(e.target.value)",
          "line": 637,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setEndpointsMin(e.target.value)",
          "line": 648,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setEndpointsMax(e.target.value)",
          "line": 654,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setResponseTimeMin(e.target.value)",
          "line": 665,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setResponseTimeMax(e.target.value)",
          "line": 671,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "async (id: number) => {\n    if (!confirm('Are you sure you want to delete this service scope?')) return;\n\n    try {\n      const response = await fetch(`/api/service-scopes/${id}`",
          "line": 248,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(scope: any) => {\n    setSelectedScope(scope);\n    setIsViewDetailsOpen(true);\n  }",
          "line": 275,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(scope: any) => {\n    setSelectedScope(scope);\n    \n    const description = scope.description || \"\";\n    const deliverables = scope.deliverables || [];\n    \n    let deliverablesString = \"\";\n    if (Array.isArray(deliverables)) {\n      deliverablesString = deliverables.join(\"",
          "line": 280,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(data: ServiceScopeFormData) => {\n    createServiceScopeMutation.mutate(data);\n  }",
          "line": 303,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(data: ServiceScopeFormData) => {\n    if (selectedScope) {\n      updateServiceScopeMutation.mutate({ ...data",
          "line": 307,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    setServiceTierFilter('all');\n    setCoverageFilter('all');\n    setEpsMin('');\n    setEpsMax('');\n    setEndpointsMin('');\n    setEndpointsMax('');\n    setResponseTimeMin('');\n    setResponseTimeMax('');\n  }",
          "line": 313,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(clientId: number) => {\n    const client = clients.find(c => c.id === clientId);\n    return client?.name || `Client ${clientId}`;\n  }",
          "line": 325,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(serviceId: number) => {\n    const service = services.find(s => s.id === serviceId);\n    return service?.name || `Service ${serviceId}`;\n  }",
          "line": 330,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(status: string) => {\n    switch (status) {\n      case \"active\":\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\n      case \"pending\":\n        return <Clock className=\"h-4 w-4 text-yellow-600\" />;\n      case \"on_hold\":\n        return <AlertTriangle className=\"h-4 w-4 text-orange-600\" />;\n      default:\n        return <Shield className=\"h-4 w-4 text-gray-600\" />;\n    }\n  }",
          "line": 335,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "(status: string) => {\n    const variants: Record<string",
          "line": 348,
          "pattern": "useCallback"
        },
        {
          "type": "event",
          "handler": "() => {\n    const params = new URLSearchParams();\n    \n    if (debouncedSearchQuery.trim()) {\n      params.append('q'",
          "line": 87,
          "pattern": "useMemo"
        }
      ],
      "issues": [
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 275,
          "severity": "warning"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 313,
          "severity": "warning"
        },
        {
          "type": "empty-dependencies",
          "message": "useCallback/useMemo with empty dependencies array",
          "line": 335,
          "severity": "warning"
        },
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/services-page.tsx",
      "fileName": "services-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setIsFormOpen(true)",
          "line": 155,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEdit(service)",
          "line": 249,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(service.id)",
          "line": 258,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsFormOpen(true)",
          "line": 301,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsFormOpen(true)",
          "line": 155,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEdit(service)",
          "line": 246,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDelete(service.id)",
          "line": 255,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsFormOpen(true)",
          "line": 301,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleFormSubmit",
          "line": 336,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchQuery(e.target.value)",
          "line": 169,
          "pattern": "change"
        }
      ],
      "issues": []
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/settings-page.tsx",
      "fileName": "settings-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleSaveProfile",
          "line": 482,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => fileInputRef.current?.click()",
          "line": 544,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleRemoveLogo",
          "line": 554,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleLogoUpload",
          "line": 573,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveLdapSettings",
          "line": 820,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleTestLdapConnection",
          "line": 834,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveAllSettings",
          "line": 1078,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveProfile",
          "line": 482,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => fileInputRef.current?.click()",
          "line": 542,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleRemoveLogo",
          "line": 551,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleLogoUpload",
          "line": 572,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveLdapSettings",
          "line": 819,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleTestLdapConnection",
          "line": 832,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleSaveAllSettings",
          "line": 1078,
          "pattern": "onClick"
        },
        {
          "type": "form",
          "handler": "(e) => setCompanyName(e.target.value)",
          "line": 503,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleLogoSelect",
          "line": 539,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapUrl', e.target.value)",
          "line": 649,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapBindDn', e.target.value)",
          "line": 658,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapBindPassword', e.target.value)",
          "line": 667,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapSearchBase', e.target.value)",
          "line": 676,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapSearchFilter', e.target.value)",
          "line": 685,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapUsernameAttribute', e.target.value)",
          "line": 694,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapEmailAttribute', e.target.value)",
          "line": 703,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapFirstNameAttribute', e.target.value)",
          "line": 712,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapLastNameAttribute', e.target.value)",
          "line": 721,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapDefaultRole', e.target.value)",
          "line": 730,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapGroupSearchBase', e.target.value)",
          "line": 739,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapGroupSearchFilter', e.target.value)",
          "line": 748,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapAdminGroup', e.target.value)",
          "line": 757,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapManagerGroup', e.target.value)",
          "line": 766,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapEngineerGroup', e.target.value)",
          "line": 775,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapConnectionTimeout', e.target.value)",
          "line": 784,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('ldapSearchTimeout', e.target.value)",
          "line": 793,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('timezone', e.target.value)",
          "line": 948,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('language', e.target.value)",
          "line": 963,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleCurrencyChange(e.target.value)",
          "line": 980,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => handleSelectChange('dataRetentionPeriod', e.target.value)",
          "line": 1046,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (settings) {\n      setSettingsData(settings);",
          "line": 115,
          "pattern": "useEffect"
        },
        {
          "type": "event",
          "handler": "if (companySettings) {\n      setCompanyName(companySettings.companyName || \"MSSP Platform\");\n      if (companySettings.logoUrl) {\n        setLogoPreview(companySettings.logoUrl);",
          "line": 122,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "dom-manipulation",
          "message": "Direct DOM manipulation detected (potential React anti-pattern)",
          "count": 4,
          "severity": "warning"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/simple-auth.tsx",
      "fileName": "simple-auth.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "() => setIsLogin(!isLogin)",
          "line": 207,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsLogin(!isLogin)",
          "line": 205,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "handleLoginSubmit",
          "line": 61,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleRegisterSubmit",
          "line": 101,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleLoginSubmit",
          "line": 61,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "handleRegisterSubmit",
          "line": 101,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 70,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 85,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 111,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 126,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 142,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 157,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 172,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "handleInputChange",
          "line": 187,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "if (user) {\n      navigate(\"/\");",
          "line": 18,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "preventDefault-usage",
          "message": "Uses preventDefault (check if necessary)",
          "count": 2,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/team-page.tsx",
      "fileName": "team-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "handleAddTeamMember",
          "line": 372,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditTeamMember(member.id.toString())",
          "line": 499,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.location.href = `/clients?assignedTo=${member.id",
          "line": 508,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleNewAssignment",
          "line": 530,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditAssignment(assignment.id.toString())",
          "line": 601,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteAssignment(assignment.id.toString())",
          "line": 604,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsAddMemberOpen(false)",
          "line": 723,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                    setIsNewAssignmentOpen(false);\n                    setSelectedAssignmentId(null);\n                    assignmentForm.reset();",
          "line": 806,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleAddTeamMember",
          "line": 372,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditTeamMember(member.id.toString())",
          "line": 495,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => window.location.href = `/clients?assignedTo=${member.id",
          "line": 504,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "handleNewAssignment",
          "line": 530,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleEditAssignment(assignment.id.toString())",
          "line": 601,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => handleDeleteAssignment(assignment.id.toString())",
          "line": 604,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => setIsAddMemberOpen(false)",
          "line": 723,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => {\n                    setIsNewAssignmentOpen(false);\n                    setSelectedAssignmentId(null);\n                    assignmentForm.reset();",
          "line": 806,
          "pattern": "onClick"
        },
        {
          "type": "submit",
          "handler": "addMemberForm.handleSubmit(onAddMemberSubmit)",
          "line": 631,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "assignmentForm.handleSubmit(onAssignmentSubmit)",
          "line": 743,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "addMemberForm.handleSubmit(onAddMemberSubmit)",
          "line": 631,
          "pattern": "onSubmit"
        },
        {
          "type": "submit",
          "handler": "assignmentForm.handleSubmit(onAssignmentSubmit)",
          "line": 743,
          "pattern": "onSubmit"
        },
        {
          "type": "form",
          "handler": "(e) => setSearchTerm(e.target.value)",
          "line": 427,
          "pattern": "change"
        },
        {
          "type": "form",
          "handler": "(e) => setRoleFilter(e.target.value)",
          "line": 435,
          "pattern": "change"
        },
        {
          "type": "event",
          "handler": "fetchTeamMembers();",
          "line": 99,
          "pattern": "useEffect"
        }
      ],
      "issues": [
        {
          "type": "console-usage",
          "message": "Console statements found (consider removing for production)",
          "count": 1,
          "severity": "info"
        }
      ]
    },
    {
      "path": "/Users/yasseralmohammed/mcsportal/msspv4/client/src/pages/test-error-page.tsx",
      "fileName": "test-error-page.tsx",
      "handlers": [
        {
          "type": "button",
          "handler": "testJavaScriptError",
          "line": 80,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "testNetworkError",
          "line": 88,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => testReactQueryError.mutate()",
          "line": 96,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "testComponentError",
          "line": 105,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "testJavaScriptError",
          "line": 79,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "testNetworkError",
          "line": 87,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "() => testReactQueryError.mutate()",
          "line": 95,
          "pattern": "onClick"
        },
        {
          "type": "button",
          "handler": "testComponentError",
          "line": 104,
          "pattern": "onClick"
        }
      ],
      "issues": []
    }
  ],
  "potentialIssues": [
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 14,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 7,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 7,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 4,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 8,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 1,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 69,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 4,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 215,
      "severity": "warning"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 219,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 662,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 1,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 4,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 5,
      "severity": "info"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 286,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 60,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 4,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 5,
      "severity": "info"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 32,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 1,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 115,
      "severity": "warning"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 119,
      "severity": "warning"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 123,
      "severity": "warning"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 127,
      "severity": "warning"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 1,
      "severity": "warning"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 1,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 16,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 1,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 4,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 1,
      "severity": "warning"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 141,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 4,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 3,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 1,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 9,
      "severity": "warning"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 275,
      "severity": "warning"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 313,
      "severity": "warning"
    },
    {
      "type": "empty-dependencies",
      "message": "useCallback/useMemo with empty dependencies array",
      "line": 335,
      "severity": "warning"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    },
    {
      "type": "dom-manipulation",
      "message": "Direct DOM manipulation detected (potential React anti-pattern)",
      "count": 4,
      "severity": "warning"
    },
    {
      "type": "preventDefault-usage",
      "message": "Uses preventDefault (check if necessary)",
      "count": 2,
      "severity": "info"
    },
    {
      "type": "console-usage",
      "message": "Console statements found (consider removing for production)",
      "count": 1,
      "severity": "info"
    }
  ]
}